import { Update, Ctx, Hears } from 'nestjs-telegraf';
import { Context } from '$/libs/interfaces/context.interface';
import { NewsService } from './news.service';
import { KeyboardService } from '../common/services/keyboard.service';

@Update()
export class NewsUpdate {
  constructor(
    private readonly newsService: NewsService,
    private readonly keyboardService: KeyboardService,
  ) {}

  @Hears('üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±–∑–æ—Ä')
  async onPublishReview(@Ctx() ctx: Context) {
    await this.newsService.publishReview(ctx);
    await ctx.reply(
      '–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω! üéâ',
      this.keyboardService.getMainKeyboard(),
    );
  }

  @Hears('üéâ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã PPV/—Å–ø–µ—Ü—à–æ—É')
  async onPublishPPVResults(@Ctx() ctx: Context) {
    await this.newsService.publishPPVResults(ctx);
  }

  @Hears('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞')
  async onPublishResults(@Ctx() ctx: Context) {
    await this.newsService.publishWeeklyResults(ctx);
  }

  @Hears('‚úÖ –î–∞')
  async onConfirmYes(@Ctx() ctx: Context) {
    await this.newsService.handleWeeklyConfirmation(ctx, true);
  }

  @Hears('‚ùå –ù–µ—Ç')
  async onConfirmNo(@Ctx() ctx: Context) {
    await this.newsService.handleWeeklyConfirmation(ctx, false);
  }
}
